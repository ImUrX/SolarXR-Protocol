
include "datatypes/math.fbs";
include "datatypes/datatypes.fbs";
include "firmware/data_feed/device_data.fbs";


namespace solarxr_protocol.firmware.data_feed;

union DataFeedMessage {
    PollDataFeed,
    StartDataFeed,
    DataFeedUpdate,
    DataFeedConfig,
}

table DataFeedMessageHeader {
    // This is trivial, but needs to be here because we can't have vectors of unions.
    // Plus, maybe we need to add data later on.
    message: DataFeedMessage;
}


/// Requests for a single `Update` to be sent. This is helpful when getting
/// initial info about the device.
table PollDataFeed {
    config: DataFeedConfig;
}


/// Requests for the other party to send `data_feeds`.
/// For example, GUI requests for position data to be sent from server.
///
/// When sending a new `StartFeed`, the old data feeds should stop being sent.
/// We still support multiple data feeds at the same time, because `data_feeds`
/// is a list.
///
/// Multiple data feeds are useful to get data at different frequencies.
table StartDataFeed {
    data_feeds: [DataFeedConfig];
}

table DataFeedUpdate {
   devices: [solarxr_protocol.firmware.data_feed.device_data.DeviceData];
}


table DataFeedConfig {
    /// Minimum delay in milliseconds between new data updates. This value will be
    /// ignored when used for a `PollDataFeed`.
    minimum_time_since_last: uint16 = 0;
    data_mask: solarxr_protocol.firmware.data_feed.device_data.DeviceDataMask;
}