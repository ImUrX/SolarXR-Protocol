// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class DeviceFeatures {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):DeviceFeatures {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDeviceFeatures(bb:flatbuffers.ByteBuffer, obj?:DeviceFeatures):DeviceFeatures {
  return (obj || new DeviceFeatures()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDeviceFeatures(bb:flatbuffers.ByteBuffer, obj?:DeviceFeatures):DeviceFeatures {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DeviceFeatures()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

gyroscopeCalibration():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

accelerometerCalibration():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

magnetometerCalibration():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startDeviceFeatures(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addGyroscopeCalibration(builder:flatbuffers.Builder, gyroscopeCalibration:boolean) {
  builder.addFieldInt8(0, +gyroscopeCalibration, +false);
}

static addAccelerometerCalibration(builder:flatbuffers.Builder, accelerometerCalibration:boolean) {
  builder.addFieldInt8(1, +accelerometerCalibration, +false);
}

static addMagnetometerCalibration(builder:flatbuffers.Builder, magnetometerCalibration:boolean) {
  builder.addFieldInt8(2, +magnetometerCalibration, +false);
}

static endDeviceFeatures(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createDeviceFeatures(builder:flatbuffers.Builder, gyroscopeCalibration:boolean, accelerometerCalibration:boolean, magnetometerCalibration:boolean):flatbuffers.Offset {
  DeviceFeatures.startDeviceFeatures(builder);
  DeviceFeatures.addGyroscopeCalibration(builder, gyroscopeCalibration);
  DeviceFeatures.addAccelerometerCalibration(builder, accelerometerCalibration);
  DeviceFeatures.addMagnetometerCalibration(builder, magnetometerCalibration);
  return DeviceFeatures.endDeviceFeatures(builder);
}

unpack(): DeviceFeaturesT {
  return new DeviceFeaturesT(
    this.gyroscopeCalibration(),
    this.accelerometerCalibration(),
    this.magnetometerCalibration()
  );
}


unpackTo(_o: DeviceFeaturesT): void {
  _o.gyroscopeCalibration = this.gyroscopeCalibration();
  _o.accelerometerCalibration = this.accelerometerCalibration();
  _o.magnetometerCalibration = this.magnetometerCalibration();
}
}

export class DeviceFeaturesT {
constructor(
  public gyroscopeCalibration: boolean = false,
  public accelerometerCalibration: boolean = false,
  public magnetometerCalibration: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return DeviceFeatures.createDeviceFeatures(builder,
    this.gyroscopeCalibration,
    this.accelerometerCalibration,
    this.magnetometerCalibration
  );
}
}
