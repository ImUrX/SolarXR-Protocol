// automatically generated by the FlatBuffers compiler, do not modify

import { PairingRequest, PairingRequestT } from '../../solarxr-protocol/device/pairing-request';
import { SetWifiResponse, SetWifiResponseT } from '../../solarxr-protocol/device/commands/set-wifi-response';
import { TapResponse, TapResponseT } from '../../solarxr-protocol/device/commands/tap-response';
import { DataFeedResponse, DataFeedResponseT } from '../../solarxr-protocol/device/data-feed/data-feed-response';


export enum DeviceBoundMessage{
  NONE = 0,
  solarxr_protocol_device_data_feed_DataFeedResponse = 1,
  solarxr_protocol_device_commands_TapResponse = 2,
  solarxr_protocol_device_commands_SetWifiResponse = 3,
  PairingRequest = 4
}

export function unionToDeviceBoundMessage(
  type: DeviceBoundMessage,
  accessor: (obj:DataFeedResponse|PairingRequest|SetWifiResponse|TapResponse) => DataFeedResponse|PairingRequest|SetWifiResponse|TapResponse|null
): DataFeedResponse|PairingRequest|SetWifiResponse|TapResponse|null {
  switch(DeviceBoundMessage[type]) {
    case 'NONE': return null; 
    case 'solarxr_protocol_device_data_feed_DataFeedResponse': return accessor(new DataFeedResponse())! as DataFeedResponse;
    case 'solarxr_protocol_device_commands_TapResponse': return accessor(new TapResponse())! as TapResponse;
    case 'solarxr_protocol_device_commands_SetWifiResponse': return accessor(new SetWifiResponse())! as SetWifiResponse;
    case 'PairingRequest': return accessor(new PairingRequest())! as PairingRequest;
    default: return null;
  }
}

export function unionListToDeviceBoundMessage(
  type: DeviceBoundMessage, 
  accessor: (index: number, obj:DataFeedResponse|PairingRequest|SetWifiResponse|TapResponse) => DataFeedResponse|PairingRequest|SetWifiResponse|TapResponse|null, 
  index: number
): DataFeedResponse|PairingRequest|SetWifiResponse|TapResponse|null {
  switch(DeviceBoundMessage[type]) {
    case 'NONE': return null; 
    case 'solarxr_protocol_device_data_feed_DataFeedResponse': return accessor(index, new DataFeedResponse())! as DataFeedResponse;
    case 'solarxr_protocol_device_commands_TapResponse': return accessor(index, new TapResponse())! as TapResponse;
    case 'solarxr_protocol_device_commands_SetWifiResponse': return accessor(index, new SetWifiResponse())! as SetWifiResponse;
    case 'PairingRequest': return accessor(index, new PairingRequest())! as PairingRequest;
    default: return null;
  }
}

