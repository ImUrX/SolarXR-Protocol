// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { DataFeedConfig, DataFeedConfigT } from '../../../solarxr-protocol/device/data-feed/data-feed-config';


export class PollDataFeedRequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):PollDataFeedRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsPollDataFeedRequest(bb:flatbuffers.ByteBuffer, obj?:PollDataFeedRequest):PollDataFeedRequest {
  return (obj || new PollDataFeedRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsPollDataFeedRequest(bb:flatbuffers.ByteBuffer, obj?:PollDataFeedRequest):PollDataFeedRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new PollDataFeedRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

config(obj?:DataFeedConfig):DataFeedConfig|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new DataFeedConfig()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startPollDataFeedRequest(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addConfig(builder:flatbuffers.Builder, configOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, configOffset, 0);
}

static endPollDataFeedRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createPollDataFeedRequest(builder:flatbuffers.Builder, configOffset:flatbuffers.Offset):flatbuffers.Offset {
  PollDataFeedRequest.startPollDataFeedRequest(builder);
  PollDataFeedRequest.addConfig(builder, configOffset);
  return PollDataFeedRequest.endPollDataFeedRequest(builder);
}

unpack(): PollDataFeedRequestT {
  return new PollDataFeedRequestT(
    (this.config() !== null ? this.config()!.unpack() : null)
  );
}


unpackTo(_o: PollDataFeedRequestT): void {
  _o.config = (this.config() !== null ? this.config()!.unpack() : null);
}
}

export class PollDataFeedRequestT {
constructor(
  public config: DataFeedConfigT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const config = (this.config !== null ? this.config!.pack(builder) : 0);

  return PollDataFeedRequest.createPollDataFeedRequest(builder,
    config
  );
}
}
