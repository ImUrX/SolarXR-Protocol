// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class SetWifiRequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):SetWifiRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSetWifiRequest(bb:flatbuffers.ByteBuffer, obj?:SetWifiRequest):SetWifiRequest {
  return (obj || new SetWifiRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSetWifiRequest(bb:flatbuffers.ByteBuffer, obj?:SetWifiRequest):SetWifiRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SetWifiRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static startSetWifiRequest(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSetWifiRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSetWifiRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  SetWifiRequest.startSetWifiRequest(builder);
  return SetWifiRequest.endSetWifiRequest(builder);
}

unpack(): SetWifiRequestT {
  return new SetWifiRequestT();
}


unpackTo(_o: SetWifiRequestT): void {}
}

export class SetWifiRequestT {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SetWifiRequest.createSetWifiRequest(builder);
}
}
