// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.rpc

import java.nio.*
import kotlin.math.sign
import com.google.flatbuffers.*

@Suppress("unused")
class AutoBoneProcessStatusResponse : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : AutoBoneProcessStatusResponse {
        __init(_i, _bb)
        return this
    }
    val processType : UByte
        get() {
            val o = __offset(4)
            return if(o != 0) bb.get(o + bb_pos).toUByte() else 0u
        }
    val message : String?
        get() {
            val o = __offset(6)
            return if (o != 0) __string(o + bb_pos) else null
        }
    val messageAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(6, 1)
    fun messageInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 6, 1)
    val current : UInt
        get() {
            val o = __offset(8)
            return if(o != 0) bb.getInt(o + bb_pos).toUInt() else 0u
        }
    val total : UInt
        get() {
            val o = __offset(10)
            return if(o != 0) bb.getInt(o + bb_pos).toUInt() else 0u
        }
    val completed : Boolean
        get() {
            val o = __offset(12)
            return if(o != 0) 0.toByte() != bb.get(o + bb_pos) else false
        }
    val success : Boolean
        get() {
            val o = __offset(14)
            return if(o != 0) 0.toByte() != bb.get(o + bb_pos) else false
        }
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_22_10_26()
        fun getRootAsAutoBoneProcessStatusResponse(_bb: ByteBuffer): AutoBoneProcessStatusResponse = getRootAsAutoBoneProcessStatusResponse(_bb, AutoBoneProcessStatusResponse())
        fun getRootAsAutoBoneProcessStatusResponse(_bb: ByteBuffer, obj: AutoBoneProcessStatusResponse): AutoBoneProcessStatusResponse {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun createAutoBoneProcessStatusResponse(builder: FlatBufferBuilder, processType: UByte, messageOffset: Int, current: UInt, total: UInt, completed: Boolean, success: Boolean) : Int {
            builder.startTable(6)
            addTotal(builder, total)
            addCurrent(builder, current)
            addMessage(builder, messageOffset)
            addSuccess(builder, success)
            addCompleted(builder, completed)
            addProcessType(builder, processType)
            return endAutoBoneProcessStatusResponse(builder)
        }
        fun startAutoBoneProcessStatusResponse(builder: FlatBufferBuilder) = builder.startTable(6)
        fun addProcessType(builder: FlatBufferBuilder, processType: UByte) = builder.addByte(0, processType.toByte(), 0)
        fun addMessage(builder: FlatBufferBuilder, message: Int) = builder.addOffset(1, message, 0)
        fun addCurrent(builder: FlatBufferBuilder, current: UInt) = builder.addInt(2, current.toInt(), 0)
        fun addTotal(builder: FlatBufferBuilder, total: UInt) = builder.addInt(3, total.toInt(), 0)
        fun addCompleted(builder: FlatBufferBuilder, completed: Boolean) = builder.addBoolean(4, completed, false)
        fun addSuccess(builder: FlatBufferBuilder, success: Boolean) = builder.addBoolean(5, success, false)
        fun endAutoBoneProcessStatusResponse(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
    }
}
